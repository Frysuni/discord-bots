const { logger } = require('../utilities/logger.js');
const { MessageEmbed, MessageActionRow, MessageButton } = require('discord.js');
const { setupID, createRecord } = require('./database.js');

const votebuttons = new MessageActionRow().addComponents(
    new MessageButton()
        .setCustomId('upvotebutton')
        .setStyle('SUCCESS')
        .setEmoji('‚úÖ'),
    new MessageButton()
        .setCustomId('downvotebutton')
        .setStyle('DANGER')
        .setEmoji('üõë'),
);
const workbuttons = new MessageActionRow().addComponents(
    new MessageButton()
        .setCustomId('sug_finish')
        .setStyle('PRIMARY')
        .setEmoji('üèÅ'),
    new MessageButton()
        .setCustomId('sug_remove')
        .setStyle('SECONDARY')
        .setEmoji('üóë'),
);

const isValidUrl = async urlString => {
    const urlPattern = new RegExp('^(https?:\\/\\/)?'
        + '((([a-z\\d]([a-z\\d-]*[a-z\\d])*)\\.)+[a-z]{2,}|'
        + '((\\d{1,3}\\.){3}\\d{1,3}))'
        + '(\\:\\d+)?(\\/[-a-z\\d%_.~+]*)*'
        + '(\\?[;&a-z\\d%_.~+=-]*)?'
        + '(\\#[-a-z\\d_]*)?$', 'i');
    return !!urlPattern.test(urlString);
};
module.exports = {

    async form(client, interaction) {
        const id = await setupID();
        logger('–û—Ç–ø—Ä–∞–≤–∫–∞ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è —Å ID ' + id);
        const desc = await interaction.fields.getTextInputValue('sug_desc');
        const image_url = await interaction.fields.getTextInputValue('sug_image_url');
        let sugEmbed = new MessageEmbed()
        .setAuthor({ name: `–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –æ—Ç ${interaction.member.user.username}`, iconURL: `https://cdn.discordapp.com/avatars/${interaction.member.user.id}/${interaction.member.user.avatar}.webp` })
        .setTitle(interaction.fields.getTextInputValue('sug_topic'))
        .addFields(
            { name: '> **–ù–∞–∑–≤–∞–Ω–∏–µ:**', value: interaction.fields.getTextInputValue('sug_name') },
        )
        .setFooter({ text:`#${id}` });
        if (desc) {
            sugEmbed = {
                ...sugEmbed,
                fields: [
                    ...sugEmbed.fields,
                    { name: '> **–û–ø–∏—Å–∞–Ω–∏–µ:**', value: desc, inline: false },
                ],
            };
        }
        if (image_url) {
            if (!await isValidUrl(image_url)) {
                logger('–ù–µ–≤–∞–ª–∏–¥–Ω–∞—è —Å—Å—ã–ª–∫–∞ –≤ –º–æ–¥–∞–ª–∫–µ ' + image_url);
                interaction.reply({ content: '–¢—ã —É–∫–∞–∑–∞–ª —Å—Å—ã–ª–∫—É, –∫–æ—Ç–æ—Ä–∞—è –Ω–µ –ø—Ä–æ—à–ª–∞ –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å. –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –æ—à–∏–±–∫—É —è –º–æ–≥—É –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å —Ç–æ–ª—å–∫–æ –≤—ã–ª–µ—Ç–æ–º –≤—Å–ø–ª—ã–≤–∞—é—â–µ–≥–æ –æ–∫–Ω–∞, —á—Ç–æ–±—ã –±–æ—Ç –Ω–µ –∫—Ä–∞—à–Ω—É–ª—Å—è. –¢–∞–∫ —á—Ç–æ –∏–∑–≤–∏–Ω–∏, –ø—Ä–∏–¥–µ—Ç—Å—è –ø–µ—Ä–µ–ø–∏—Å–∞—Ç—å. –í —Ç–µ–æ—Ä–∏–∏, —è –º–æ–≥—É –¥–æ–ø–∏—Å–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –Ω–∞–±—Ä–∞–Ω–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞, –µ—Å–ª–∏ –ø–æ–ø—Ä–æ—Å–∏—à—å. –ù–æ –ø–æ–∫–∞ —Ç–æ–ª—å–∫–æ —Ç–∞–∫.', ephemeral: true });
                return;
            }
            sugEmbed = {
                ...sugEmbed,
                'image': { 'url': image_url },
            };
        }
        const thismsg = await client.channels.cache.get(process.env.SUGGESTIONS_CHANNEL_ID).send({ content: ':grey_exclamation: **–ù–æ–≤–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ!**', embeds: [sugEmbed], components: [votebuttons, workbuttons] });
        const objecttodb = {
            id,
            message: thismsg.id,
            content: JSON.stringify(sugEmbed),
            owner: interaction.member.user.id,
        };
        createRecord(objecttodb);

        interaction.reply({ content: '–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!', ephemeral: true });
        sugEmbed = new MessageEmbed();
    },
};
